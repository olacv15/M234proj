
ADC2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000190  00800100  000004be  00000552  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800290  00800290  000006e2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000714  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000077f  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000067f  00000000  00000000  00000f0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002ad  00000000  00000000  0000158e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ac  00000000  00000000  0000183c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c1  00000000  00000000  000018e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  00001ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001d74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee eb       	ldi	r30, 0xBE	; 190
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 39       	cpi	r26, 0x90	; 144
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a0 e9       	ldi	r26, 0x90	; 144
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 39       	cpi	r26, 0x96	; 150
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  9e:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z5setupv>:

void setup()
{
	//Oppgsett av interrupt ved faste tidspunkt
	
	DDRB = 0xFF;											//Setter alle bits i port b som outputs
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	84 b9       	out	0x04, r24	; 4
	
	TCCR1A = 0;
  aa:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0;
  ae:	e1 e8       	ldi	r30, 0x81	; 129
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	10 82       	st	Z, r1
	TCCR1B |= (1 << WGM12) | (1 << CS10);					//Prescaler 1, CTC mode
  b4:	80 81       	ld	r24, Z
  b6:	89 60       	ori	r24, 0x09	; 9
  b8:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1A);								//Output compare A match interrupt enable
  ba:	ef e6       	ldi	r30, 0x6F	; 111
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	82 60       	ori	r24, 0x02	; 2
  c2:	80 83       	st	Z, r24

	OCR1A = 199;											//Timer1 teller fra 0-199. Med prescaler på 1:1 gir dette oss en pwm frekvens på 200Hz, oppløsning på 200.
  c4:	87 ec       	ldi	r24, 0xC7	; 199
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  cc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	//Oppsett av ADC

	ADMUX = 0b01000001;										// første to bit: bruker AVCC som referanse, men krever ekstern kondensator på AREF pin for å redusere støy
  d0:	81 e4       	ldi	r24, 0x41	; 65
  d2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
															// siste fire bit velger ADC1 altså  PC1
							
	ADCSRA |= (1 << ADEN);									// enabler ADC, prescaler blir da 1: inputklokke har samme hastighet som systemklokke.  
  d6:	ea e7       	ldi	r30, 0x7A	; 122
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	80 68       	ori	r24, 0x80	; 128
  de:	80 83       	st	Z, r24
  e0:	08 95       	ret

000000e2 <main>:
}
	
		
int main(void)
{
	setup();
  e2:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z5setupv>
	sei();
  e6:	78 94       	sei
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <main+0x6>

000000ea <_Z6ledOFFv>:
}

	
void ledOFF(void)
{
	PORTB |= 0b00000001;
  ea:	28 9a       	sbi	0x05, 0	; 5
  ec:	08 95       	ret

000000ee <_Z5ledONv>:
}


void ledON(void)
{
	PORTB &=0b11111110;
  ee:	28 98       	cbi	0x05, 0	; 5
  f0:	08 95       	ret

000000f2 <__vector_11>:
// tabell med lineariserte lysverdier  
const uint16_t tabell[200] = {0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,13,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,23,23,24,25,25,26,26,27,28,29,29,30,31,31,32,33,34,35,35,36,37,38,39,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,64,65,66,67,69,70,71,72,74,75,76,78,79,81,82,84,85,86,88,89,91,93,94,96,97,99,101,102,104,106,107,109,111,112,114,116,118,120,122,123,125,127,129,131,133,135,137,139,141,143,145,147,149,152,154,156,158,160,163,165,167,170,172,174,177,179,181,184,186,189,191,194,196,199};


ISR(TIMER1_COMPA_vect)
{	
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	2f 93       	push	r18
  fe:	3f 93       	push	r19
 100:	4f 93       	push	r20
 102:	5f 93       	push	r21
 104:	6f 93       	push	r22
 106:	7f 93       	push	r23
 108:	8f 93       	push	r24
 10a:	9f 93       	push	r25
 10c:	af 93       	push	r26
 10e:	bf 93       	push	r27
 110:	ef 93       	push	r30
 112:	ff 93       	push	r31
	ADCSRA |= (1 << ADSC);					//start konvertering
 114:	ea e7       	ldi	r30, 0x7A	; 122
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	80 64       	ori	r24, 0x40	; 64
 11c:	80 83       	st	Z, r24
	
	while (ADCSRA & (1<<ADSC))
 11e:	80 81       	ld	r24, Z
 120:	86 fd       	sbrc	r24, 6
 122:	fd cf       	rjmp	.-6      	; 0x11e <__vector_11+0x2c>
	{
											//vent på at konvertering er ferdig
	}
	
	resultat = ADC;							//resultat av kovertering
 124:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 128:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 12c:	70 93 95 02 	sts	0x0295, r23	; 0x800295 <resultat+0x1>
 130:	60 93 94 02 	sts	0x0294, r22	; 0x800294 <resultat>
											//brukte denne tidligere : resultat = (ADCH<<8) + ADCL; da leser programmet kun en 
											//gang, altså resultat låses selv om vi får gjennom interrupt	
	mappet = round(resultat/5.145);			//endrer fra 1024 trinn til 200 trinn, makverdi for mappet er dermed 199											
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 82 01 	call	0x304	; 0x304 <__floatunsisf>
 13c:	27 ed       	ldi	r18, 0xD7	; 215
 13e:	33 ea       	ldi	r19, 0xA3	; 163
 140:	44 ea       	ldi	r20, 0xA4	; 164
 142:	50 e4       	ldi	r21, 0x40	; 64
 144:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <__divsf3>
 148:	0e 94 10 02 	call	0x420	; 0x420 <round>
 14c:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__fixunssfsi>
 150:	70 93 91 02 	sts	0x0291, r23	; 0x800291 <__data_end+0x1>
 154:	60 93 90 02 	sts	0x0290, r22	; 0x800290 <__data_end>

	if (InterruptTeller >= tabell[mappet])	//sammenligninger med tabellverdiene
 158:	66 0f       	add	r22, r22
 15a:	77 1f       	adc	r23, r23
 15c:	fb 01       	movw	r30, r22
 15e:	e0 50       	subi	r30, 0x00	; 0
 160:	ff 4f       	sbci	r31, 0xFF	; 255
 162:	20 81       	ld	r18, Z
 164:	31 81       	ldd	r19, Z+1	; 0x01
 166:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <InterruptTeller>
 16a:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <InterruptTeller+0x1>
 16e:	82 17       	cp	r24, r18
 170:	93 07       	cpc	r25, r19
 172:	18 f0       	brcs	.+6      	; 0x17a <__vector_11+0x88>
	{
		ledOFF();
 174:	0e 94 75 00 	call	0xea	; 0xea <_Z6ledOFFv>
 178:	02 c0       	rjmp	.+4      	; 0x17e <__vector_11+0x8c>
	}
	else
	{
		ledON();
 17a:	0e 94 77 00 	call	0xee	; 0xee <_Z5ledONv>
	}
	
	InterruptTeller++;
 17e:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <InterruptTeller>
 182:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <InterruptTeller+0x1>
 186:	01 96       	adiw	r24, 0x01	; 1
	
	if(InterruptTeller >= 199)
 188:	87 3c       	cpi	r24, 0xC7	; 199
 18a:	91 05       	cpc	r25, r1
 18c:	28 f4       	brcc	.+10     	; 0x198 <__vector_11+0xa6>
	else
	{
		ledON();
	}
	
	InterruptTeller++;
 18e:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <InterruptTeller+0x1>
 192:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <InterruptTeller>
 196:	04 c0       	rjmp	.+8      	; 0x1a0 <__vector_11+0xae>
	
	if(InterruptTeller >= 199)
	{	
		InterruptTeller = 0;				//starter teller på nytt
 198:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <InterruptTeller+0x1>
 19c:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <InterruptTeller>
	}
	


}
 1a0:	ff 91       	pop	r31
 1a2:	ef 91       	pop	r30
 1a4:	bf 91       	pop	r27
 1a6:	af 91       	pop	r26
 1a8:	9f 91       	pop	r25
 1aa:	8f 91       	pop	r24
 1ac:	7f 91       	pop	r23
 1ae:	6f 91       	pop	r22
 1b0:	5f 91       	pop	r21
 1b2:	4f 91       	pop	r20
 1b4:	3f 91       	pop	r19
 1b6:	2f 91       	pop	r18
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <__divsf3>:
 1c2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <__divsf3x>
 1c6:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_round>
 1ca:	0e 94 cf 01 	call	0x39e	; 0x39e <__fp_pscB>
 1ce:	58 f0       	brcs	.+22     	; 0x1e6 <__divsf3+0x24>
 1d0:	0e 94 c8 01 	call	0x390	; 0x390 <__fp_pscA>
 1d4:	40 f0       	brcs	.+16     	; 0x1e6 <__divsf3+0x24>
 1d6:	29 f4       	brne	.+10     	; 0x1e2 <__divsf3+0x20>
 1d8:	5f 3f       	cpi	r21, 0xFF	; 255
 1da:	29 f0       	breq	.+10     	; 0x1e6 <__divsf3+0x24>
 1dc:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_inf>
 1e0:	51 11       	cpse	r21, r1
 1e2:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_szero>
 1e6:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_nan>

000001ea <__divsf3x>:
 1ea:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_split3>
 1ee:	68 f3       	brcs	.-38     	; 0x1ca <__divsf3+0x8>

000001f0 <__divsf3_pse>:
 1f0:	99 23       	and	r25, r25
 1f2:	b1 f3       	breq	.-20     	; 0x1e0 <__divsf3+0x1e>
 1f4:	55 23       	and	r21, r21
 1f6:	91 f3       	breq	.-28     	; 0x1dc <__divsf3+0x1a>
 1f8:	95 1b       	sub	r25, r21
 1fa:	55 0b       	sbc	r21, r21
 1fc:	bb 27       	eor	r27, r27
 1fe:	aa 27       	eor	r26, r26
 200:	62 17       	cp	r22, r18
 202:	73 07       	cpc	r23, r19
 204:	84 07       	cpc	r24, r20
 206:	38 f0       	brcs	.+14     	; 0x216 <__divsf3_pse+0x26>
 208:	9f 5f       	subi	r25, 0xFF	; 255
 20a:	5f 4f       	sbci	r21, 0xFF	; 255
 20c:	22 0f       	add	r18, r18
 20e:	33 1f       	adc	r19, r19
 210:	44 1f       	adc	r20, r20
 212:	aa 1f       	adc	r26, r26
 214:	a9 f3       	breq	.-22     	; 0x200 <__divsf3_pse+0x10>
 216:	35 d0       	rcall	.+106    	; 0x282 <__divsf3_pse+0x92>
 218:	0e 2e       	mov	r0, r30
 21a:	3a f0       	brmi	.+14     	; 0x22a <__divsf3_pse+0x3a>
 21c:	e0 e8       	ldi	r30, 0x80	; 128
 21e:	32 d0       	rcall	.+100    	; 0x284 <__divsf3_pse+0x94>
 220:	91 50       	subi	r25, 0x01	; 1
 222:	50 40       	sbci	r21, 0x00	; 0
 224:	e6 95       	lsr	r30
 226:	00 1c       	adc	r0, r0
 228:	ca f7       	brpl	.-14     	; 0x21c <__divsf3_pse+0x2c>
 22a:	2b d0       	rcall	.+86     	; 0x282 <__divsf3_pse+0x92>
 22c:	fe 2f       	mov	r31, r30
 22e:	29 d0       	rcall	.+82     	; 0x282 <__divsf3_pse+0x92>
 230:	66 0f       	add	r22, r22
 232:	77 1f       	adc	r23, r23
 234:	88 1f       	adc	r24, r24
 236:	bb 1f       	adc	r27, r27
 238:	26 17       	cp	r18, r22
 23a:	37 07       	cpc	r19, r23
 23c:	48 07       	cpc	r20, r24
 23e:	ab 07       	cpc	r26, r27
 240:	b0 e8       	ldi	r27, 0x80	; 128
 242:	09 f0       	breq	.+2      	; 0x246 <__divsf3_pse+0x56>
 244:	bb 0b       	sbc	r27, r27
 246:	80 2d       	mov	r24, r0
 248:	bf 01       	movw	r22, r30
 24a:	ff 27       	eor	r31, r31
 24c:	93 58       	subi	r25, 0x83	; 131
 24e:	5f 4f       	sbci	r21, 0xFF	; 255
 250:	3a f0       	brmi	.+14     	; 0x260 <__divsf3_pse+0x70>
 252:	9e 3f       	cpi	r25, 0xFE	; 254
 254:	51 05       	cpc	r21, r1
 256:	78 f0       	brcs	.+30     	; 0x276 <__divsf3_pse+0x86>
 258:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_inf>
 25c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_szero>
 260:	5f 3f       	cpi	r21, 0xFF	; 255
 262:	e4 f3       	brlt	.-8      	; 0x25c <__divsf3_pse+0x6c>
 264:	98 3e       	cpi	r25, 0xE8	; 232
 266:	d4 f3       	brlt	.-12     	; 0x25c <__divsf3_pse+0x6c>
 268:	86 95       	lsr	r24
 26a:	77 95       	ror	r23
 26c:	67 95       	ror	r22
 26e:	b7 95       	ror	r27
 270:	f7 95       	ror	r31
 272:	9f 5f       	subi	r25, 0xFF	; 255
 274:	c9 f7       	brne	.-14     	; 0x268 <__divsf3_pse+0x78>
 276:	88 0f       	add	r24, r24
 278:	91 1d       	adc	r25, r1
 27a:	96 95       	lsr	r25
 27c:	87 95       	ror	r24
 27e:	97 f9       	bld	r25, 7
 280:	08 95       	ret
 282:	e1 e0       	ldi	r30, 0x01	; 1
 284:	66 0f       	add	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	88 1f       	adc	r24, r24
 28a:	bb 1f       	adc	r27, r27
 28c:	62 17       	cp	r22, r18
 28e:	73 07       	cpc	r23, r19
 290:	84 07       	cpc	r24, r20
 292:	ba 07       	cpc	r27, r26
 294:	20 f0       	brcs	.+8      	; 0x29e <__divsf3_pse+0xae>
 296:	62 1b       	sub	r22, r18
 298:	73 0b       	sbc	r23, r19
 29a:	84 0b       	sbc	r24, r20
 29c:	ba 0b       	sbc	r27, r26
 29e:	ee 1f       	adc	r30, r30
 2a0:	88 f7       	brcc	.-30     	; 0x284 <__divsf3_pse+0x94>
 2a2:	e0 95       	com	r30
 2a4:	08 95       	ret

000002a6 <__fixunssfsi>:
 2a6:	0e 94 ef 01 	call	0x3de	; 0x3de <__fp_splitA>
 2aa:	88 f0       	brcs	.+34     	; 0x2ce <__fixunssfsi+0x28>
 2ac:	9f 57       	subi	r25, 0x7F	; 127
 2ae:	98 f0       	brcs	.+38     	; 0x2d6 <__fixunssfsi+0x30>
 2b0:	b9 2f       	mov	r27, r25
 2b2:	99 27       	eor	r25, r25
 2b4:	b7 51       	subi	r27, 0x17	; 23
 2b6:	b0 f0       	brcs	.+44     	; 0x2e4 <__fixunssfsi+0x3e>
 2b8:	e1 f0       	breq	.+56     	; 0x2f2 <__fixunssfsi+0x4c>
 2ba:	66 0f       	add	r22, r22
 2bc:	77 1f       	adc	r23, r23
 2be:	88 1f       	adc	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	1a f0       	brmi	.+6      	; 0x2ca <__fixunssfsi+0x24>
 2c4:	ba 95       	dec	r27
 2c6:	c9 f7       	brne	.-14     	; 0x2ba <__fixunssfsi+0x14>
 2c8:	14 c0       	rjmp	.+40     	; 0x2f2 <__fixunssfsi+0x4c>
 2ca:	b1 30       	cpi	r27, 0x01	; 1
 2cc:	91 f0       	breq	.+36     	; 0x2f2 <__fixunssfsi+0x4c>
 2ce:	0e 94 09 02 	call	0x412	; 0x412 <__fp_zero>
 2d2:	b1 e0       	ldi	r27, 0x01	; 1
 2d4:	08 95       	ret
 2d6:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_zero>
 2da:	67 2f       	mov	r22, r23
 2dc:	78 2f       	mov	r23, r24
 2de:	88 27       	eor	r24, r24
 2e0:	b8 5f       	subi	r27, 0xF8	; 248
 2e2:	39 f0       	breq	.+14     	; 0x2f2 <__fixunssfsi+0x4c>
 2e4:	b9 3f       	cpi	r27, 0xF9	; 249
 2e6:	cc f3       	brlt	.-14     	; 0x2da <__fixunssfsi+0x34>
 2e8:	86 95       	lsr	r24
 2ea:	77 95       	ror	r23
 2ec:	67 95       	ror	r22
 2ee:	b3 95       	inc	r27
 2f0:	d9 f7       	brne	.-10     	; 0x2e8 <__fixunssfsi+0x42>
 2f2:	3e f4       	brtc	.+14     	; 0x302 <__fixunssfsi+0x5c>
 2f4:	90 95       	com	r25
 2f6:	80 95       	com	r24
 2f8:	70 95       	com	r23
 2fa:	61 95       	neg	r22
 2fc:	7f 4f       	sbci	r23, 0xFF	; 255
 2fe:	8f 4f       	sbci	r24, 0xFF	; 255
 300:	9f 4f       	sbci	r25, 0xFF	; 255
 302:	08 95       	ret

00000304 <__floatunsisf>:
 304:	e8 94       	clt
 306:	09 c0       	rjmp	.+18     	; 0x31a <__floatsisf+0x12>

00000308 <__floatsisf>:
 308:	97 fb       	bst	r25, 7
 30a:	3e f4       	brtc	.+14     	; 0x31a <__floatsisf+0x12>
 30c:	90 95       	com	r25
 30e:	80 95       	com	r24
 310:	70 95       	com	r23
 312:	61 95       	neg	r22
 314:	7f 4f       	sbci	r23, 0xFF	; 255
 316:	8f 4f       	sbci	r24, 0xFF	; 255
 318:	9f 4f       	sbci	r25, 0xFF	; 255
 31a:	99 23       	and	r25, r25
 31c:	a9 f0       	breq	.+42     	; 0x348 <__floatsisf+0x40>
 31e:	f9 2f       	mov	r31, r25
 320:	96 e9       	ldi	r25, 0x96	; 150
 322:	bb 27       	eor	r27, r27
 324:	93 95       	inc	r25
 326:	f6 95       	lsr	r31
 328:	87 95       	ror	r24
 32a:	77 95       	ror	r23
 32c:	67 95       	ror	r22
 32e:	b7 95       	ror	r27
 330:	f1 11       	cpse	r31, r1
 332:	f8 cf       	rjmp	.-16     	; 0x324 <__floatsisf+0x1c>
 334:	fa f4       	brpl	.+62     	; 0x374 <__floatsisf+0x6c>
 336:	bb 0f       	add	r27, r27
 338:	11 f4       	brne	.+4      	; 0x33e <__floatsisf+0x36>
 33a:	60 ff       	sbrs	r22, 0
 33c:	1b c0       	rjmp	.+54     	; 0x374 <__floatsisf+0x6c>
 33e:	6f 5f       	subi	r22, 0xFF	; 255
 340:	7f 4f       	sbci	r23, 0xFF	; 255
 342:	8f 4f       	sbci	r24, 0xFF	; 255
 344:	9f 4f       	sbci	r25, 0xFF	; 255
 346:	16 c0       	rjmp	.+44     	; 0x374 <__floatsisf+0x6c>
 348:	88 23       	and	r24, r24
 34a:	11 f0       	breq	.+4      	; 0x350 <__floatsisf+0x48>
 34c:	96 e9       	ldi	r25, 0x96	; 150
 34e:	11 c0       	rjmp	.+34     	; 0x372 <__floatsisf+0x6a>
 350:	77 23       	and	r23, r23
 352:	21 f0       	breq	.+8      	; 0x35c <__floatsisf+0x54>
 354:	9e e8       	ldi	r25, 0x8E	; 142
 356:	87 2f       	mov	r24, r23
 358:	76 2f       	mov	r23, r22
 35a:	05 c0       	rjmp	.+10     	; 0x366 <__floatsisf+0x5e>
 35c:	66 23       	and	r22, r22
 35e:	71 f0       	breq	.+28     	; 0x37c <__floatsisf+0x74>
 360:	96 e8       	ldi	r25, 0x86	; 134
 362:	86 2f       	mov	r24, r22
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	2a f0       	brmi	.+10     	; 0x374 <__floatsisf+0x6c>
 36a:	9a 95       	dec	r25
 36c:	66 0f       	add	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	88 1f       	adc	r24, r24
 372:	da f7       	brpl	.-10     	; 0x36a <__floatsisf+0x62>
 374:	88 0f       	add	r24, r24
 376:	96 95       	lsr	r25
 378:	87 95       	ror	r24
 37a:	97 f9       	bld	r25, 7
 37c:	08 95       	ret

0000037e <__fp_inf>:
 37e:	97 f9       	bld	r25, 7
 380:	9f 67       	ori	r25, 0x7F	; 127
 382:	80 e8       	ldi	r24, 0x80	; 128
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	60 e0       	ldi	r22, 0x00	; 0
 388:	08 95       	ret

0000038a <__fp_nan>:
 38a:	9f ef       	ldi	r25, 0xFF	; 255
 38c:	80 ec       	ldi	r24, 0xC0	; 192
 38e:	08 95       	ret

00000390 <__fp_pscA>:
 390:	00 24       	eor	r0, r0
 392:	0a 94       	dec	r0
 394:	16 16       	cp	r1, r22
 396:	17 06       	cpc	r1, r23
 398:	18 06       	cpc	r1, r24
 39a:	09 06       	cpc	r0, r25
 39c:	08 95       	ret

0000039e <__fp_pscB>:
 39e:	00 24       	eor	r0, r0
 3a0:	0a 94       	dec	r0
 3a2:	12 16       	cp	r1, r18
 3a4:	13 06       	cpc	r1, r19
 3a6:	14 06       	cpc	r1, r20
 3a8:	05 06       	cpc	r0, r21
 3aa:	08 95       	ret

000003ac <__fp_round>:
 3ac:	09 2e       	mov	r0, r25
 3ae:	03 94       	inc	r0
 3b0:	00 0c       	add	r0, r0
 3b2:	11 f4       	brne	.+4      	; 0x3b8 <__fp_round+0xc>
 3b4:	88 23       	and	r24, r24
 3b6:	52 f0       	brmi	.+20     	; 0x3cc <__fp_round+0x20>
 3b8:	bb 0f       	add	r27, r27
 3ba:	40 f4       	brcc	.+16     	; 0x3cc <__fp_round+0x20>
 3bc:	bf 2b       	or	r27, r31
 3be:	11 f4       	brne	.+4      	; 0x3c4 <__fp_round+0x18>
 3c0:	60 ff       	sbrs	r22, 0
 3c2:	04 c0       	rjmp	.+8      	; 0x3cc <__fp_round+0x20>
 3c4:	6f 5f       	subi	r22, 0xFF	; 255
 3c6:	7f 4f       	sbci	r23, 0xFF	; 255
 3c8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ca:	9f 4f       	sbci	r25, 0xFF	; 255
 3cc:	08 95       	ret

000003ce <__fp_split3>:
 3ce:	57 fd       	sbrc	r21, 7
 3d0:	90 58       	subi	r25, 0x80	; 128
 3d2:	44 0f       	add	r20, r20
 3d4:	55 1f       	adc	r21, r21
 3d6:	59 f0       	breq	.+22     	; 0x3ee <__fp_splitA+0x10>
 3d8:	5f 3f       	cpi	r21, 0xFF	; 255
 3da:	71 f0       	breq	.+28     	; 0x3f8 <__fp_splitA+0x1a>
 3dc:	47 95       	ror	r20

000003de <__fp_splitA>:
 3de:	88 0f       	add	r24, r24
 3e0:	97 fb       	bst	r25, 7
 3e2:	99 1f       	adc	r25, r25
 3e4:	61 f0       	breq	.+24     	; 0x3fe <__fp_splitA+0x20>
 3e6:	9f 3f       	cpi	r25, 0xFF	; 255
 3e8:	79 f0       	breq	.+30     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ea:	87 95       	ror	r24
 3ec:	08 95       	ret
 3ee:	12 16       	cp	r1, r18
 3f0:	13 06       	cpc	r1, r19
 3f2:	14 06       	cpc	r1, r20
 3f4:	55 1f       	adc	r21, r21
 3f6:	f2 cf       	rjmp	.-28     	; 0x3dc <__fp_split3+0xe>
 3f8:	46 95       	lsr	r20
 3fa:	f1 df       	rcall	.-30     	; 0x3de <__fp_splitA>
 3fc:	08 c0       	rjmp	.+16     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3fe:	16 16       	cp	r1, r22
 400:	17 06       	cpc	r1, r23
 402:	18 06       	cpc	r1, r24
 404:	99 1f       	adc	r25, r25
 406:	f1 cf       	rjmp	.-30     	; 0x3ea <__fp_splitA+0xc>
 408:	86 95       	lsr	r24
 40a:	71 05       	cpc	r23, r1
 40c:	61 05       	cpc	r22, r1
 40e:	08 94       	sec
 410:	08 95       	ret

00000412 <__fp_zero>:
 412:	e8 94       	clt

00000414 <__fp_szero>:
 414:	bb 27       	eor	r27, r27
 416:	66 27       	eor	r22, r22
 418:	77 27       	eor	r23, r23
 41a:	cb 01       	movw	r24, r22
 41c:	97 f9       	bld	r25, 7
 41e:	08 95       	ret

00000420 <round>:
 420:	0e 94 ef 01 	call	0x3de	; 0x3de <__fp_splitA>
 424:	e8 f0       	brcs	.+58     	; 0x460 <round+0x40>
 426:	9e 37       	cpi	r25, 0x7E	; 126
 428:	e8 f0       	brcs	.+58     	; 0x464 <round+0x44>
 42a:	96 39       	cpi	r25, 0x96	; 150
 42c:	b8 f4       	brcc	.+46     	; 0x45c <round+0x3c>
 42e:	9e 38       	cpi	r25, 0x8E	; 142
 430:	48 f4       	brcc	.+18     	; 0x444 <round+0x24>
 432:	67 2f       	mov	r22, r23
 434:	78 2f       	mov	r23, r24
 436:	88 27       	eor	r24, r24
 438:	98 5f       	subi	r25, 0xF8	; 248
 43a:	f9 cf       	rjmp	.-14     	; 0x42e <round+0xe>
 43c:	86 95       	lsr	r24
 43e:	77 95       	ror	r23
 440:	67 95       	ror	r22
 442:	93 95       	inc	r25
 444:	95 39       	cpi	r25, 0x95	; 149
 446:	d0 f3       	brcs	.-12     	; 0x43c <round+0x1c>
 448:	b6 2f       	mov	r27, r22
 44a:	b1 70       	andi	r27, 0x01	; 1
 44c:	6b 0f       	add	r22, r27
 44e:	71 1d       	adc	r23, r1
 450:	81 1d       	adc	r24, r1
 452:	20 f4       	brcc	.+8      	; 0x45c <round+0x3c>
 454:	87 95       	ror	r24
 456:	77 95       	ror	r23
 458:	67 95       	ror	r22
 45a:	93 95       	inc	r25
 45c:	0c 94 34 02 	jmp	0x468	; 0x468 <__fp_mintl>
 460:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_mpack>
 464:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_szero>

00000468 <__fp_mintl>:
 468:	88 23       	and	r24, r24
 46a:	71 f4       	brne	.+28     	; 0x488 <__fp_mintl+0x20>
 46c:	77 23       	and	r23, r23
 46e:	21 f0       	breq	.+8      	; 0x478 <__fp_mintl+0x10>
 470:	98 50       	subi	r25, 0x08	; 8
 472:	87 2b       	or	r24, r23
 474:	76 2f       	mov	r23, r22
 476:	07 c0       	rjmp	.+14     	; 0x486 <__fp_mintl+0x1e>
 478:	66 23       	and	r22, r22
 47a:	11 f4       	brne	.+4      	; 0x480 <__fp_mintl+0x18>
 47c:	99 27       	eor	r25, r25
 47e:	0d c0       	rjmp	.+26     	; 0x49a <__fp_mintl+0x32>
 480:	90 51       	subi	r25, 0x10	; 16
 482:	86 2b       	or	r24, r22
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	2a f0       	brmi	.+10     	; 0x494 <__fp_mintl+0x2c>
 48a:	9a 95       	dec	r25
 48c:	66 0f       	add	r22, r22
 48e:	77 1f       	adc	r23, r23
 490:	88 1f       	adc	r24, r24
 492:	da f7       	brpl	.-10     	; 0x48a <__fp_mintl+0x22>
 494:	88 0f       	add	r24, r24
 496:	96 95       	lsr	r25
 498:	87 95       	ror	r24
 49a:	97 f9       	bld	r25, 7
 49c:	08 95       	ret

0000049e <__fp_mpack>:
 49e:	9f 3f       	cpi	r25, 0xFF	; 255
 4a0:	31 f0       	breq	.+12     	; 0x4ae <__fp_mpack_finite+0xc>

000004a2 <__fp_mpack_finite>:
 4a2:	91 50       	subi	r25, 0x01	; 1
 4a4:	20 f4       	brcc	.+8      	; 0x4ae <__fp_mpack_finite+0xc>
 4a6:	87 95       	ror	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b7 95       	ror	r27
 4ae:	88 0f       	add	r24, r24
 4b0:	91 1d       	adc	r25, r1
 4b2:	96 95       	lsr	r25
 4b4:	87 95       	ror	r24
 4b6:	97 f9       	bld	r25, 7
 4b8:	08 95       	ret

000004ba <_exit>:
 4ba:	f8 94       	cli

000004bc <__stop_program>:
 4bc:	ff cf       	rjmp	.-2      	; 0x4bc <__stop_program>
